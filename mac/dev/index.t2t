M a c O S X • d e v



% Linguagens, ferramentas e técnicas

%%!includeconf: ../../include/config-clean.t2t
%%!includeconf: ../../include/urls.t2t

%!includeconf: ../../include/10anos/config.t2t
%!style      : ../../include/10anos/faq.css
%%!style: ../../include/10anos/tutorial.css

%!postproc: '(<TITLE>).*( ::)'	'\1Desenvolvimento no Mac OS X\2'
%!postproc: '(?i)(<BODY)'	'\1 id="macdev"'

%!options: --toc
%  --toc-level 4
%%!encoding: utf-8
%%!postproc: Ortogr.+fico Ortográfico

%!postproc: SITEROOT 		../..

% Increase main width from to 80%
%%!postproc: '(id="main")'	'\1 style="padding:1em 20% 4em 20%"'

% Remove banner do UmPortugues
%%!postproc: '^<div id="seeme">.*' ''

%!preproc: URL_MLMACDEV		http://br.groups.yahoo.com/group/macdev-br
%!postproc: URL_SCRIPTEDITOR	applescript://com.apple.scripteditor?action=new&script=--%20Abriu!

% pretty keys
%!postproc: '-Shift([ .,])'		-⇧\1
%!postproc: '-Control([ .,])'		-⌃\1
%!postproc: '-Option([ .,])'		-⌥\1
%!postproc: '-Command([ .,])'		-⌘\1
%!postproc: Shift-			⇧
%!postproc: Control-			⌃
%!postproc: Option-			⌥
%!postproc: Command-			⌘
%!postproc: ([⇧⌃⌥⌘]+[A-Z0-9])\b		<b>\1</b>
%!preproc: ' > '			' → '

%!preproc: NOME_AURELIO		Aurelio Marinho Jargas
%!preproc: NOME_ANDRE		André Ruiz
%!preproc: NOME_BERNARDO	Bernardo Höhl
%!preproc: NOME_OTAVIO		Otávio Corrêa Cordeiro
%!preproc: NOME_RUDA		Rudá Moura
%!preproc: NOME_PIERRE		Pierre Freire
%!preproc: NOME_JULIO		Julio Cesar Silva dos Santos
%!preproc: NOME_KOJIMA		Alfredo Kojima

%!preproc: URL_FINK		http://fink.sf.net
%!preproc: URL_MACPORTS		http://www.macports.org
%!preproc: URL_RUDIX		http://rudix.org

%""" {{div id="main"}}

%%!include: ''../../include/google-ads-twins.html''

%%TODO

% Perfil dos desenv brazucas
% freshmeat-like pra anuncio de versoes novas?

%%TOC

= Desenvolvimento no Mac OS X=
Me ajude a tornar esta página mais completa! Mande sugestões e textos para [@oreio _MYTWITTER]

% == Comunidade ===[comunidade]

== Fórums ==[forum]

São poucas as pessoas que usam Mac no Brasil. Mais raro ainda, são programadores que desenvolvem para Mac.

E quanto menor a comunidade, mais importante a união, para que os poucos se ajudem.

Pensando nisso, foi criado o grupo macdev-br. Se você é programador/designer e desenvolve softwares para Mac, ou está querendo ingressar nesse mundo selvagem e não sabe como começar, participe do nosso grupo.


=== macdev-br — Desenvolvedores brasileiros p/ Mac OS X, iPhone e iPod ===

Ponto de encontro para os programadores brasileiros que desenvolvem softwares para o Mac.

Para discussão de tópicos sobre linguagens (Objective-C, AppleScript, Java, Python, ...), conceitos (Cocoa, Carbon, Dashboard) e ferramentas (Xcode, Interface Builder).

Além da programação, também há troca de idéias sobre todo o processo de produção, lançamento e divulgação de freewares e sharewares, envolvendo técnicas como chave de registro, senha, expiração, preço, forma de pagamento e relato de experiências.

- Para entrar: macdev-br-subscribe@yahoogrupos.com.br
- Página do grupo: http://br.groups.yahoo.com/group/macdev-br
-

Se você programa no Mac, junte-se a nós!

=== Canais de IRC ===

Outro ponto de comunicação é são os canais de IRC no servidor irc.freenode.net:

- #macdev-br
- #iphonedev-br
- #mac-br
-

Apareça!

%%%
==== Blogs ====[blogs]

- [NOME_ANDRE http://token47.blogspot.com]
- [NOME_AURELIO http://aurelio.net/blog/]
- [NOME_BERNARDO http://homepage.mac.com/fundidor/iblog/]
%Emito notas fiscais, tenho gerigonças que alimentam peixes, acedem/apagam lampadas, etc...
- [Fernando Massen http://livejournal.com/users/ferhr]
- [NOME_OTAVIO http://otavio.geek42.org]
- [NOME_RUDA http://www.livejournal.com/~rstm]
-
%%%

== Documentação em Português ==[docpt]

- [Tutorial brasileiro de Objective-C http://blog.pierrefreire.com.br/search/label/Curso%20Objective-c], de NOME_PIERRE
- [Tutorial em português sobre o PyObjC tutorial-pyobjc/], de NOME_AURELIO
- [Blog sobre desenvolvimento no Mac http://www.mindbike.com.br/blog/], de Ademar Varela
- 

== Livros ==[livros]

- [Cocoa Programming for Mac OS X http://www.bignerdranch.com/products.shtml], de Aaron Hillegass
- [The iPhone Developer's Cookbook: Building Applications with the iPhone SDK (Developer's Library) http://www.amazon.com/iPhone-Developers-Cookbook-Building-Applications/dp/0321555457], de Erica Sadun
-

== Aplicativos Indispensáveis ==[apps]

=== Xcode ===[xcode]

``/Developer/Applications/Xcode``

Comandos mais utilizados:

- Command-R — Compila e executa o programa
-

Mais informações:
- [Xcode no site da Apple http://developer.apple.com/tools/xcode/]
- [Artigo da Wikipedia sobre o Xcode http://en.wikipedia.org/wiki/Xcode]
- [Xcode usando Subversion http://developer.apple.com/tools/subversionxcode.html]
- 


=== Interface Builder ===[interface-builder]

``/Developer/Applications/Interface Builder``

Comandos mais utilizados:

- Command-R — Testa a interface
- Command-L — Destaca todos os elementos com bordas vermelhas
- Command-D — Duplica um elemento
- Shift-Command-I — Abre o Inspector, que mostra as propriedades do elemento selecionado
-

Mais informações:
- [Artigo da Wikipedia sobre o Interface Builder http://en.wikipedia.org/wiki/Interface_Builder]
-

=== Script Editor (Editor de Roteiros) ===[script-editor]

``/Applications/AppleScript/Script Editor``

Editor para a linguagem AppleScript, é a maneira mais rápida de escrever e rodar scripts. Já vem instalado com o sistema. [Clique aqui para abri-lo agora URL_SCRIPTEDITOR].

Comandos mais utilizados:

- Command-K — Compila o script (checa sintaxe e arruma o alinhamento)
- Command-R — Executa o script (compila e executa)
- Shift-Command-O — Abre o dicionário de palavras-chave de um aplicativo do sistema
-

=== Realbasic ===[realbasic]

	O Real Basic "funciona". Isso não quer dizer que ele é bom. Na época que eu testei (inicio de 2006) um programa "Hello World" ficou com 20MB. Não poderia ser diferente com alguma coisa que roda compilado em três plataformas diferentes (Linux, Mac e Windows - obviamente são três binários). No entanto até dá para quebrar um galho.
	{{br}}
	-- Guilherme Chapiewski

=== Revolution ===[revolution]

TODO


== Aplicativos Feitos por Brasileiros ==[apps-br]

=== AdiumBook & EmoMemory ===[adiumbook]

	por NOME_AURELIO{{br}}
	http://aurelio.net/soft/adiumbook/{{br}}
	http://aurelio.net/soft/emomemory/

O AdiumBook serve para fazer pesquisas e cruzar dados de contatos do Adium e do Address Book, mantendo-os em sincronia. O EmoMemory é um jogo de memória que usa fotos da Agenda (Address Book) ou de uma pasta qualquer, escolhida pelo usuário. Ambos escritos em AppleScript + Cocoa (AppleScript Studio).

=== Dashboard Widgets ===[widgets]

	por Guilherme Chapiewski{{br}} 
	http://gc.vialink.com.br

O Guilherme fez vários widgets bacanas para o Dashboard, são eles: Busca de CEP dos Correios do Brasil, Rastreamento de Encomendas dos Correios do Brasil, MacPress News Reader, Macmania News Reader, Mercado Livre Brasil.

=== FetchYourLyrics ===[fetchyourlyrics]

	por NOME_JULIO{{br}}
	http://www.jcs.santos.nom.br/fyl/fyl.html

O FetchYourLyrics é um programa que mostra as letras da música que está tocando atualmente no iTunes. Se o campo de letras estiver vazio, o programa procura por elas na Internet.

=== MyProject & Personal Finance ===[myproject-personalfinance]

	por Francisco Pires
	http://www.cafeinasoft.com/port/

O MyProject é um software para o acompanhamento de projetos e tarefas, com cadastro de clientes, agenda e envio de mailing. O Personal Finance é um gerenciador financeiro com suporte a múltiplas contas, categorias, contatos e gráficos.

=== MySQL GUI Tools ===[mysql-gui-tools]

	por NOME_KOJIMA{{br}}
	http://www.mysql.com/products/tools/query-browser/{{br}}
	http://www.mysql.com/products/tools/administrator/

O Kojima trabalha na MySQL e fez as versões para Mac de três componentes do MySQL GUI Tools: Workbench, Query Browser e Administrator.

=== QuickSinergy ===[quicksinergy]

	por NOME_OTAVIO{{br}}
	http://quicksynergy.sourceforge.net

O QuickSynergy é uma interface amigável de configuração para o Synergy2 (aplicativo que compartilha o mesmo mouse e teclado para dois ou mais computadores). Escrito em AppleScript + Cocoa.

=== Rudix ===[rudix]

	por NOME_RUDA{{br}}
	http://rudix.org

O Rudix disponibiliza pacotes prontos para instalar de programas úteis do Linux que faltam no OS X, como wget, ncftp e lynx. Diferente do Fink ou do MacPorts, cada pacote é auto contido e pré-compilado. Não há dependências ou requisitos, basta baixar e usar.

=== TheTranslator ===[thetranslator]

	por NOME_PIERRE{{br}}
	http://www.pierrefreire.com.br/thetranslator/

Aplicativo em Objective-C feito para traduzir e pronunciar frases em inglês. Digite a frase e aperte o botão, simples e rápido.

== Linguagens ==[linguagens]

=== Cocoa ===[cocoa]

Tá, Cocoa não é linguagem, mas fica aqui mesmo.

Sites para aprender Cocoa:

- [Tutorial de Cocoa - Tiger http://cocoadevcentral.com/d/learn_cocoa/tiger/]
- [Tutorial de Cocoa - Leopard http://cocoadevcentral.com/d/learn_cocoa/]
- [CocoaDevCentral www.cocoadevcentral.com] - Tem uma série de artigos básicos
- [CocoaBlogs http://cocoablogs.com] - Vários blogs de desenvolvedores
-

=== Objective-C ===[objc]

Objective-C é a linguagem padrão de desenvolvimento para Mac OSX.

Objective-C tem suporte nativo a SQLite usando CoreData. Existem alguns frameworks para acessar MySQL e PostGreSQL.

Para aprender:
- [Tutorial brasileiro de Objective-C http://blog.pierrefreire.com.br/search/label/Curso%20Objective-c] (em português)
- [Tutorial de Objective-C http://cocoadevcentral.com/d/learn_objectivec/] (em inglês)
-

=== Java ===[java]

Java é totalmente multiplataforma mas a interface gráfica não. Geralmente os programas feitos para Linux e Windows ficam um pouco estranhos na interface Aqua (botões com legendas truncadas, etc.).

No Mac, Java usa JDBC normalmente.

=== Javascript (Dashboard) ===[javascript]

Os aplicativos do Dashboard são escritos em HTML + CSS + Javascript.

=== AppleScript ===[applescript]

Você pode escrever seus AppleScripts em qualquer editor, mas o desenvolvimento é muito mais rápido se você usar o [Script Editor #script-editor], que já está instalado no seu Mac.

Aprender a linguagem é rápido se você entende inglês. Há poucos símbolos, os códigos-fonte parecem mais com texto corrido, um exemplo:

```
tell application "iTunes"
	
	-- Pega quais músicas estão selecionadas
	set userTracks to the selection of front window
	
	-- Quantas são?
	set totalTracks to count of userTracks
	
	-- Para cada música...
	repeat with i from 1 to totalTracks
		
		-- Mostre seu nome
		set theTrack to item i of userTracks
		display dialog (name of theTrack as string)
		
	end repeat
end tell
```

A melhor maneira de aprender a programar em AppleScript é estudando os scripts de outros programadores. Baixe da Internet, abra no Script Editor e faça alterações para ir entendendo como tudo funciona. Há vários scripts funcionais para baixar em http://aurelio.net/soft.

Se você fez um script que interage com algum programa, como o iTunes ou a Agenda, instale-o no sistema para que ele apareça no Script Menu. Há um tutorial mostrando como fazer isso, passo-a-passo e com imagens: [Installing AppleScripts http://aurelio.net/soft/applescript-install.html].

Se você entende de [Shell Script ../../shell/], saiba que é possível executar comandos de dentro do AppleScript, facilmente:

```
set resultado to do shell script "cat /etc/passwd | grep ^root" -- UUOC!
```

Não há o conceito de entrada e saída padrão (STDIN e STDOUT). Ou você usa dialogs ou você usa a área de transferência (clipboard):

```
-- Pega texto do clipboard
set theText to the clipboard

-- Copia o texto no clipboard, entre hífens
set the clipboard to "------ " & theText & " ------"
```

Também é possível fazer aplicativos complexos em AppleScript, com interface Cocoa. Basta usar o AppleScript Studio e programar diretamente no Xcode e montar as janelas no Interface Builder. É um pouco trabalhoso e demora um tempo até acostumar-se com a maneira que a comunicação entre os elementos e o código é feita. Exemplos de programas completos feitos no Studio são [AdiumBook /soft/adiumbook] (código aberto) e [EmoMemory /soft/emomemory] (shareware).


=== Python ===[python]

O Python já vem instalado no Mac, está pronto para ser usado. Digite "python" no Terminal e divirta-se.

Para descobrir em quais pastas o Python está "escondido" no Mac, faça:

```
>>> import sys
>>> for p in sys.path: print p
... 

/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python23.zip
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/plat-darwin
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/plat-mac
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/plat-mac/lib-scriptpackages
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/lib-tk
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/lib-dynload
/System/Library/Frameworks/Python.framework/Versions/2.3/lib/python2.3/site-packages
/System/Library/Frameworks/Python.framework/Versions/2.3/Extras/lib/python
>>> 
```

Se o seu aplicativo for de linha de comando, sem precisar de interface gráfica, programe normalmente, não há diferenças ou pegadinhas. Ele também vai funcionar no Linux e no Windows.

==== PyObjC ====[pyobjc]

Mas se você quiser fazer aplicativos realmente sexys e no "estilo Mac", instale o [PyObjC http://pyobjc.sourceforge.net]. Ele faz a ponte entre o Python e o Objective-C, permitindo que você acesse todas as classes e métodos do Cocoa diretamente em Python. Você também poderá usar o Xcode e o Interface Builder, como se estivesse programando em ObjC. É incrível.

Mesmo que seu aplicativo não seja gráfico, outra vantagem do PyObjC é permitir que você acesse os frameworks de outros aplicativos, permitindo por exemplo acessar a base de dados da Agenda (Address Book).

Há bastante documentação online no próprio site do PyObjC. Faça os tutoriais com atenção e mão à obra!

- [Tutorial em português sobre o PyObjC tutorial-pyobjc/]
-

== iPhone ==[iphone]

http://developer.apple.com/iphone/


== Dicas ==[dicas]

=== Como tirar screenshots ===[screenshot]

Command-Shift-3 tira uma foto da tela toda e grava o resultado em um
arquivo na sua Mesa (Desktop). Se você usar dois monitores, será tirada uma
foto para cada um.

Command-Shift-4 deixa que você selecione qual parte da tela quer
fotografar. Clique e arraste o mouse para formar o retângulo. Ao
soltar o botão, o arquivo será gravado na sua Mesa. Aperte Esc a
qualquer momento para cancelar.

Para selecionar uma janela inteira, aperte Command-Shift-4 e em
seguida a barra de espaço. O cursor virará uma máquina fotográfica e a
janela que o mouse estiver sobre, será selecionada. Ao clicar com o
mouse, o arquivo será gravado na sua Mesa. Aperte Esc a qualquer
momento para cancelar.

Para tirar uma foto de um Screen Saver, pressione Command-Shift e
fique segurando. Enquanto isso vá nas Preferências do Sistema > Screen
Saver, escolha um e mande testar. Espera um pouquinho e aperta 3.
Pronto.

Ao segurar também a tecla Control em qualquer um destes procedimentos,
a foto será copiada para a Área de Transferência ao invés de ser criado
um arquivo na Mesa.

=== Cadê o comando make (e o gcc)? ===[make]

Para ter o make, gcc e amigos, é preciso instalar o [Xcode http://en.wikipedia.org/wiki/Xcode]. Ele está no CD/DVD de instalação do Mac OS X. Mais especificamente, o gcc está no pacote Xcode Tools.


=== O formato do "pacote" ===[pacote]

A principal diferença conceitual do Mac enquanto Unix é a forma de
criação e instalação de pacotes. A grande maioria dos softwares é
compilada semi-estaticamente, ou inclui as bibliotecas de que
necessita, o que evita árvores de dependências, tão comuns (e chatas)
no Linux.

Cada aplicativo é na verdade uma pasta com estrutura bem-definida; o
executável "real" está muito bem escondido dentro dessa estrutura, e
você quase nunca precisa chamá-lo diretamente. Se quiser ver
exatamente como é a estrutura de um aplicativo, clique com o botão
direito em seu ícone e escolha "Mostrar Conteúdo do Pacote".

=== Como montar e desmontar uma imagem (DMG ou ISO) pelo terminal? ===[mount-dmg-terminal]

Use o comando hdiutil para montar a imagem e desmontar (note que é
uNmount) o volume montado.

``` $ hdiutil mount ~/Desktop/Arquivo.dmg

``` $ hdiutil mount ~/Desktop/Arquivo.iso

``` $ hdiutil unmount /Volumes/Arquivo


=== Como internacionalizar/traduzir um aplicativo? (i18n) ===[i18n]

Não tem potfiles, não tem gettext. Seus pesadelos acabaram!

Basta traduzir as frases em um arquivo texto e traduzir itens da
interface direto no Interface Builder. Ok, isso não é tão simples
quanto parece.

Nada tema, o Julio Cesar Silva dos Santos escreveu um
[excelente artigo http://www.jcs.santos.nom.br/localiza] ensinando
passo a passo como funciona a localização e tradução de aplicativos no
Mac.

=== Xcode ===[xcode-dicas]

- Se estiver usando Tiger, baixe o Xcode 2.x e use o leiaute de janelas
  tudo em 1
- Perfis de compilação: tu podes definir 1 ou mais perfis com
  parâmetros de compilação diferentes, os que vêm por padrão são:
  - Development: vem com opções de debug, 0 de otimização e uns
  truques pra linkar mais rápido
  - Deployment: com otimização, sem debug symbols, linkagem definitiva
- Para adicionar bibliotecas à lista de dependências, vai pra /usr/lib
  (ou /System/Library/Frameworks) no Finder e faz drag&drop
- Cuide para que os arquivos no teu projeto estejam com paths
  relativos (selecione o arquivo e tecle Command-I). Se não, quando
  fores distribuir os fontes (se for o caso), ninguém vai conseguir
  compilar.
- Para adicionar classes tuas no Interface Builder (IB), arraste o
  header com a declaração e largue-o na janela de projeto do IB. Assim,
  tu podes instanciar as classes usadas pela interface direto no IB e
  conectar todas as mensagens/conexões graficamente.
-

== Mais Informações ==[info]

% - [Mac OS X _X_MACOSX_URL]
- [Site da Apple para desenvolvedores http://developer.apple.com/] - Ponto de partida para desenvolvimento no Mac
- [Fórums da Apple http://discussions.info.apple.com/]
- [Version Tracker http://www.versiontracker.com/macosx/] - Avisos de lançamentos de aplicativos
- [AppleScript - Exemplos http://scriptbuilders.net/]
- [Become an Xcoder http://www.cocoalab.com/BecomeAnXcoder.pdf] - PDF que ensina Cocoa, Objective-C e Xcode de maneira rápida e indolor
-


%%!include: ''../../include/footer-clean.html''
%!include: ../../include/10anos/footer.t2t
