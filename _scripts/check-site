#!/bin/bash
# Check for errors on the generated site

error() {
    echo
    echo "**** FAILED :("
    echo
    echo "$*" | head -n 40
    exit 1
}

# Make sure we are at the repository root
cd $(dirname "$0")
cd ..

repo_root="$PWD"
site_root="$repo_root/_site"

# Enter the generated site folder
cd _site

# Search for the {{...}} pattern in repo files
check_accidental_liquid_markup() {

    # This is the only check running at the repo root
    cd "$repo_root" && git grep -I '{{.*}}' |

        # Remove false positives
        grep -v '^_includes/' |
        grep -v '^_layouts/' |
        grep -v '^_plugins/' |
        grep -v '^_scripts/' |
        grep -v '^bin/python/txt2tags-r900\.py' |
        grep -v '^blog/index\.html' |
        grep -v '^curso/index\.md' |
        grep -v '^feed\.xml' |
        grep -v '^index\.html' |
        grep -v '^tags/index\.html' |
        grep -v '^tela-preta/index\.md' |
        grep -v '^vim/vimrc-ivan\.txt' |

        # txt2tags files
        grep -v '^include/config' |
        grep -v '^include/global\.t2t' |
        grep -v '^projects/config.t2t' |
        grep -v '^projects/emomemory/index.t2t' |
        grep -v '^shell/dialog/index' |
        grep -v '^[^:]*\.t2t:.*{{br}}' |
        cat -
    cd "$site_root"
}

check_missing_article_date() {
    # This is the default date inserted by the txt2tags2html script
    git grep '^date: 1999-12-31'
}

# Do not use relative URLs in links and images
check_relative_urls() {
    # ./
    grep -r -i -E '(src|href)="\./' .
    grep -r -i -E '(src|href)="[^"]*/\./' .

    # ../
    grep -r -i -E '(src|href)="\.\./' .
    grep -r -i -E '(src|href)="[^"]*/\.\./' .
}

# No http:// for resources (mixed content) - #18
check_mixed_content() {
    grep -r -i -F 'src="http://aurelio.net' .
}

# Grep for <tag foo=bar> instead of <tag foo="bar">
check_unquoted_attributes() {
    grep -r -i --binary-files=without-match -E '<[a-z]+ ([^>]* )?[a-z]+=[^\"]' . |

        # Remove false positives
        grep -F -i -v 'content="text/html; charset=utf-8"' |
        grep -E -v '^\./bin/python/txt2tags-r900\.py:' |
        grep -E -v '^\./doc/coluna/coluna-09\.html:' |
        grep -E -v '^\./sed/programas/yahoogroups-kill-sig\.sed:' |
        grep -E -v '^\./vim/vimrc-ivan\.txt:' |

        #XXX txt2tags generated files, won't fix now
        grep -E -v '<HR NOSHADE SIZE=1>'
}

check_windows_linebreak() {
    find . -not -type d -exec file {} \; | grep CRLF |

        # Remove false positives
        grep -v '^\./projects/moneylog/' |
        grep -v '^\./moneylog/'
}

active_checks="
    check_accidental_liquid_markup
    check_missing_article_date
    check_windows_linebreak
    check_unquoted_attributes
    check_mixed_content
    check_relative_urls
"

for check in $active_checks
do
    echo "Running $check..."
    wrong=$($check)
    test -n "$wrong" && error "$wrong"
done
