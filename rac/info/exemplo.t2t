RAC - Exemplos de Endereçamento


%!includeconf: config.t2t
%!options: --toc --style exemplo.css
% tabela: negrito nos endereços, itálico nos nomes
%!preproc: '^( +\| +)(.*?)( +\| +)(.*?)( +\|)'   '\1**\2**\3//\4//\5'
% remover a borda da tabela
%!postproc: 'BORDER="1"'  ''


%%!preproc: ^rac                 ```
%!preproc: ^rac                 \t
%!preproc: LINHACASAREGEX       linha que casa com uma regex
%!preproc: LINHASCASAMREGEX     linhas que casam com uma regex
%!preproc: ^SAMPLE              Exemplo:

Esta é a "Central RAC de Atendimento ao Cliente" :), sua fonte
definitiva de consulta em caso de dúvida. Aqui estão registrados
exemplos de todas as funcionalidades do programa, antecipando
problemas que o usuário possa vir a resolver com o RAC.

%%TOC

= Resumão =

 ||                 Numérico                   |||
 |     3     |       Linha        | A terceira linha
 |    -3     |  Contagem Reversa  | A antepenúltima linha
 |    [3]    |       Coluna       | A terceira coluna
 |    1:3    |       Trecho       | Da primeira a terceira linha
 |    1~3    |       Salto        | Partindo da primeira linha, ande de 3 em 3
 ||                  Texto                 |||
 |  =abc=     |     Texto    | Todas as linhas que contêm o texto abc
 |  =abc=*3   |  Ocorrência  | Terceira linha que contém o texto abc
 |  =abc=+3   |   Contexto   | Terceira linha após a que contém o texto abc
 |  =abc=-3   |   Contexto   | Terceira linha anterior a que contém o texto abc
 ||           Expressões Regulares        |||
 |  /^abc/    |  Exp. Regular  | Todas as linhas que iniciam com abc
 |  /^abc/*3  |  Ocorrência  | Terceira linha que inicia com abc
 |  /^abc/+3  |   Contexto   | Terceira linha após a que inicia com abc
 |  /^abc/-3  |   Contexto   | Terceira linha anterior a que inicia com abc


% | 5:=abc=*1         | Trecho da quinta linha até a primeira que conter abc
% | =abc=[1:10]       | As dez primeiras colunas das linhas com abc
% | =abc=*-1:-1       | Trecho da última linha com abc até o final do texto
% | =abc=*5[-9:]      | As últimas nove colunas da quinta linha com abc
%   | =abc=:=xyz=       | Trecho entre as linhas com abc e xyz, inclusive
%   | =abc=+1:=xyz=-1   | Trecho entre as linhas com abc e xyz, excluindo-as
% | =abc=*-1:=xyz=*-1 | Trecho da última linha com abc até a última linha com xyz
% | =abc=*1~3         | A partir da primeira linha com abc, ande de 3 em 3
% | =abc=*5-2:=abc=*5+2 | Quinta ocorrência da linha com abc, com contexto de 2 linhas antes e após

= O Arquivo de Exemplo =

```
$ cat n.txt
1:I
2:II
3:III
4:IV
5:V
6:VI
7:VI
8:VII
9:IX
$
```


= Linhas =

%---------------------------------------------------------------------
                           == Posição ==
%---------------------------------------------------------------------


=== A primeira linha ===

rac 1

SAMPLE
```
$ cat n.txt | rac '1'
1:I
```

=== A última linha ===

rac -1

SAMPLE
```
$ cat n.txt | rac '-1'
9:IX
```

=== A terceira linha ===

rac 3

SAMPLE
```
$ cat n.txt | rac '3'
3:III
```

=== A antepenúltima linha ===

rac -3

SAMPLE
```
$ cat n.txt | rac '-3'
7:VII
```

=== A primeira, terceira e última linhas ===

rac 1 ; 3 ; -1

SAMPLE
```
$ cat n.txt | rac '1;3;-1'
1:I
3:III
9:IX
```

=== A última, terceira e primeira linhas ===

rac -1 ; 3 ; 1

SAMPLE
```
$ cat n.txt | rac '-1;3;1'
9:IX
3:III
1:I
```

=== A terceira linha, três vezes ===

rac 3 ; 3 ; 3

SAMPLE
```
$ cat n.txt | rac '3;3;3'
3:III
3:III
3:III
```

%---------------------------------------------------------------------
                            == Trechos ==
%---------------------------------------------------------------------

=== Da primeira linha até a terceira ===

rac 1 : 3

SAMPLE
```
$ cat n.txt | rac '1:3'
1:I
2:II
3:III
```

=== Da terceira linha até a primeira (reverso) ===

rac 3 : 1

SAMPLE
```
$ cat n.txt | rac '3:1'
3:III
2:II
1:I
```

=== Da primeira linha até a última (todas) ===

rac 1 : -1

SAMPLE
```
$ cat n.txt | rac '1:-1'
1:I
2:II
3:III
4:IV
5:V
6:VI
7:VI
8:VII
9:IX
```

=== Da terceira linha até a antepenúltima ===

rac 3 : -3

SAMPLE
```
$ cat n.txt | rac '3:-3'
3:III
4:IV
5:V
6:VI
7:VI
```

%---------------------------------------------------------------------
                            == Salto ==
%---------------------------------------------------------------------

=== Iniciando na primeira linha, ante de duas em duas (ímpares) ===

rac 1 ~ 2

SAMPLE
```
$ cat n.txt | rac '1~2'
1:I
3:III
5:V
7:VI
9:IX
```

=== Iniciando na segunda linha, ante de duas em duas (pares) ===

rac 2 ~ 2

SAMPLE
```
$ cat n.txt | rac '2~2'
2:II
4:IV
6:VI
8:VII
```

=== Iniciando na última linha, volte de duas em duas (ímpares, reverso) ===

rac -1 ~ -2

SAMPLE
```
$ cat n.txt | rac '-1~-2'
9:IX
7:VI
5:V
3:III
1:I
```

=== Iniciando na segunda linha, ande de três em três ===

rac 2 ~ 3

SAMPLE
```
$ cat n.txt | rac '2~3'
2:II
5:V
8:VIII
```



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


= Expressões Regulares =

%---------------------------------------------------------------------
                           == Ocorrência ==
%---------------------------------------------------------------------


=== Todas as LINHASCASAMREGEX ===

rac /regex/

SAMPLE
```
$ cat n.txt | rac '/[0-9]/'
1:I
2:II
3:III
4:IV
5:V
6:VI
7:VII
8:VIII
9:IX
```

=== A primeira LINHACASAREGEX ===

rac /regex/ *1

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*1'
1:I
```

=== A última LINHACASAREGEX ===

rac /regex/ *-1

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*-1'
9:IX
```

=== A terceira LINHACASAREGEX ===

rac /regex/ *3

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*3'
3:III
```

=== A antepenúltima LINHACASAREGEX ===

rac /regex/ *-3

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*-3'
7:VII
```

%---------------------------------------------------------------------
                            == Contexto ==
%---------------------------------------------------------------------

=== A linha seguinte às LINHASCASAMREGEX ===

rac /regex/ +1

=== A linha anterior às LINHASCASAMREGEX ===

rac /regex/ -1

=== A terceira linha após as LINHASCASAMREGEX ===

rac /regex/ +3

=== A terceira linha anterior às LINHASCASAMREGEX ===

rac /regex/ +3

%---------------------------------------------------------------------
                     == Contexto e Ocorrência ==
%---------------------------------------------------------------------

=== A linha seguinte à primeira LINHACASAREGEX ===

rac /regex/ *1 +1

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*1+1' 
2:II
```

=== A linha anterior à primeria LINHACASAREGEX ===

rac /regex/ *1 -1

=== A terceira linha após a primeira LINHACASAREGEX ===

rac /regex/ *1 +3

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*1+3'
4:IV
```

=== A terceira linha anterior à primeira LINHACASAREGEX ===

rac /regex/ *1 -3

=== A linha seguinte à última LINHACASAREGEX ===

rac /regex/ *-1 +1

=== A linha anterior à última LINHACASAREGEX ===

rac /regex/ *-1 -1

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*-1-1'
8:VIII
```

=== A terceira linha anterior à penúltima LINHACASAREGEX ===

rac /regex/ *-2 -3

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*-2-3'
5:V
```


%---------------------------------------------------------------------
                     == Ocorrência e Salto ==
%---------------------------------------------------------------------

=== Partindo da terceira LINHACASAREGEX, ande de 2 em 2 linhas ===

rac /regex/ *3 ~2

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*3~2'
3:III
5:V
7:VII
9:IX
```

=== Partindo da terceira LINHACASAREGEX, volte de 2 em 2 linhas ===

rac /regex/ *3 ~-2

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*3~-2'
3:III
1:I
```


%---------------------------------------------------------------------
                  == Ocorrência, Contexto e Salto ==
%---------------------------------------------------------------------

=== Partindo da linha seguinte à terceira LINHACASAREGEX, ande de 2 em 2 linhas ===

rac /regex/ *3 +1 ~2

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*3+1~2'
4:IV
6:VI
8:VIII
```

=== Partindo da linha anterior à antepenúltima LINHACASAREGEX, volte de 2 em 2 linhas ===

rac /regex/ *3 -1 ~-2

SAMPLE
```
$ cat n.txt | rac '/[0-9]/*-3-1~-2'
6:VI
4:IV
2:II
```

%---------------------------------------------------------------------
                            == Trechos ==
%---------------------------------------------------------------------

=== Todas as linhas entre duas regexes, inclusive, todas as ocorrências ===

rac /regex1/ : /regex2/

SAMPLE
```
$ cat n.txt | rac '/[15]/:/[37]/'
1:I
2:II
3:III
5:V
6:VI
7:VII
```

=== Todas as linhas entre duas regexes, "exclusive", todas as ocorrências ===

rac /regex1/ +1 : /regex2/ -1

SAMPLE
```
$ cat n.txt | rac '/[15]/+1:/[37]/-1'
2:II
6:VI
```

=== Linhas do início do arquivo até encontrar a primeira ocorrência de uma regex ===

rac 1 : /regex/ *1

SAMPLE
```
$ cat n.txt | rac '1:/[357]/*1'
1:I
2:II
3:III
```

=== Linhas do início do arquivo até encontrar a última ocorrência de uma regex ===

rac 1 : /regex/ *-1

SAMPLE
```
$ cat n.txt | rac '1:/[357]/*-1'
1:I
2:II
3:III
4:IV
5:V
6:VI
7:VII
```

=== Linhas da primeira ocorrência de uma regex até o fim do arquivo ===

rac /regex/ *1 : -1

SAMPLE
```
$ cat n.txt | rac '/[357]/*1:-1'
3:III
4:IV
5:V
6:VI
7:VII
8:VIII
9:IX
```

=== Linhas da última ocorrência de uma regex até o fim do arquivo ===

rac /regex/ *-1 : -1

SAMPLE
```
$ cat n.txt | rac '/[357]/*-1:-1'
7:VII
8:VIII
9:IX
```

=== Todas as linhas entre duas regexes, inclusive, apenas a primeira ocorrência ===

rac /regex1/ *1 : /regex2/ *1

SAMPLE
```
$ cat n.txt | rac '/[15]/*1:/[37]/*1'
1:I
2:II
3:III
```

=== Todas as linhas entre duas regexes, inclusive, apenas a última ocorrência ===

rac /regex1/ *-1 : /regex2/ *-1

SAMPLE
```
$ cat n.txt | rac '/[15]/*-1:/[37]/*-1'
5:V
6:VI
7:VII
```

=== Todas as linhas entre duas regexes, "exclusive", apenas a primeira ocorrência ===

rac /regex1/ *1 +1 : /regex2/ *1 -1

SAMPLE
```
$ cat n.txt | rac '/[15]/*1+1:/[37]/*1-1'
2:II
```

=== Todas as linhas entre duas regexes, "exclusive", apenas a última ocorrência ===

rac /regex1/ *-1 +1 : /regex2/ *-1 -1

SAMPLE
```
$ cat n.txt | rac '/[15]/*-1+1:/[37]/*-1-1'
6:VI
```

=== Todas as linhas entre a primeira ocorrência de uma regex e a última de outra, inclusive ===

rac /regex1/ *1 : /regex2/ *-1

SAMPLE
```
$ cat n.txt | rac '/[15]/*1:/[37]/*-1'
1:I
2:II
3:III
4:IV
5:V
6:VI
7:VII
```

=== Todas as linhas entre a última ocorrência de uma regex e a primeira de outra, inclusive (e invertido!) ===

rac /regex1/ *-1 : /regex2/ *1

SAMPLE
```
$ cat n.txt | rac '/[15]/*-1:/[37]/*1'
5:V
4:IV
3:III
```


----------------------------------------------------------------
[Voltar à página do RAC .]
