_MLX_NAME


%!postproc: SITEROOT    ../..
%!postproc: MLROOT /moneylog
%!includeconf: ../_config.t2t
%!postproc: (<BODY)     \1 class="beta"
%!options: --toc

O _MLX_NAME é para os nerds. É para quem prefere o poder e a flexibilidade, mesmo sendo mais difícil de lidar.

O seu código é sempre o mais atualizado, pois vem direto do GitHub. Funciona offline, pois só usa arquivos locais. Usa arquivos TXT para guardar os dados. Totalmente configurável (e raqueável) via arquivo JavaScript local. Pode usar [junto com o Cloud #cloud]. E a cor da interface é preta, a única cor verdadeiramente nerd :)

Pode quebrar? Claro! Por isso o nome Beta. Mas **esta é a versão que eu uso**, então eu tenho muito cuidado para deixá-la sempre funcionando.
%  Mesmo assim, me avise se achar algo de errado: @oreio ou [aqui _MYBLOG/contato/].

% 	Nota: Se você prefere uma versão mais estável, e ainda assim poderosa, use a _MLC_LINK.

	Nota: Se você já usava a versão Beta antes de 2012, leia o [Guia de Migração MLROOT/beta/update-2012.html] pois há algumas mudanças importantes que requerem sua ação.

	Nota: [O Google Chrome é feio, bobo e chato #bug-chrome] :(


% Acesse a demonstração online: [_MLX_APPURL _MLX_APPURL]
Acesse a demonstração online: Que demo o que… [Baixa logo aí #download].

% A versão beta do _ML é o código mais recente do programa, que conta com novidades que ainda não foram lançadas na versão oficial. O código está em constante evolução e novidades podem aparecer a qualquer momento.
% 
% Use o _MLX se você quer experimentar estas novidades assim que elas forem implementadas, tornando sua experiência com o _ML ainda mais completa.
% 
% Problemas podem ocorrer, mas serão corrigidos rapidamente, pois eu uso esta versão diariamente e logo percebo se há alguma falha. Mesmo assim, contate-me se encontrar algo de errado: @oreio ou [aqui _MYBLOG/contato/].

% Para acompanhar em tempo real as mudanças desta versão beta, [siga-me no twitter _MYTWITTER], acompanhe [a lista das mudanças http://code.google.com/p/moneylog-dev/source/list] ou assine [o feed das atualizações http://code.google.com/feeds/p/moneylog-dev/svnchanges/basic].
% 
% 	**Meu conselho:** Faça como eu, abandone a versão "oficial" (que pára no tempo) e só use esta versão "viva", que está sempre melhorando. Eu me comprometo a não estragá-la :)

% == Demonstração ==[demo]
% 
% Você pode experimentar as novidades da versão beta agora mesmo, sem precisar baixar nem instalar nada: [_MLX Online MLROOT/svn/moneylog.html].
% 
% Mas se você já utiliza o _ML, o melhor mesmo é usá-lo com os **seus** dados. Veja o tópico seguinte para aprender como baixar e instalar a versão beta.

%%TOC


== Download ==[download]

```
git clone \
    https://github.com/aureliojargas/moneylog.git \
    moneylog-beta
```

O repositório será copiado para a pasta local ``moneylog-beta``. Quando ele terminar de baixar, abra o arquivo ``moneylog.html`` em seu navegador ([que não seja o Google Chrome… #bug-chrome]).

% 	**Nota para usuários do Internet Explorer:** Se o MoneyLog não carregou corretamente e apareceu um aviso de segurança dizendo que ele pode ser perigoso ou algo assim, [veja como proceder MLROOT/faq/#aviso-ie].


== Atualização ==[update]

Para sincronizar a sua versão local com os arquivos mais recentes do GitHub:

```
cd moneylog-beta
git pull
```

Rode este comando de tempos em tempos, ou coloque no cron.

% 	**Nota:** Não se preocupe que seus arquivos pessoais (``dados.txt`` e ``config.js``) não serão apagados ou alterados.


== Arquivo de configuração ==[config]

Todas as [configurações MLROOT/config/] devem ser colocadas no arquivo ``config.js``.

Este arquivo não existe, você deve criá-lo dentro de sua pasta do _MLX, já na raiz. Basta copiar o modelo comentado, que vem na pasta sample:

``` cp sample/config-pt.js config.js

Pode ficar tranquilo, suas alterações no ``config.js`` não serão perdidas quando você [atualizar #update] o _MLX.

== Arquivo TXT para os lançamentos ==[txt]

Por padrão o _MLX carrega os lançamentos do arquivo de exemplo: ``sample/data-pt.txt``. NÃO coloque seus dados neste arquivo.

Crie uma pasta chamada ``txt`` dentro de sua pasta do _MLX. E ali dentro crie os arquivos TXT para guardar seus lançamentos. Para começar simples, crie um único arquivo.

```
mkdir txt
echo > txt/dados.txt
```

	Nota: O arquivo TXT poderia estar em qualquer pasta de seu computador, mas é melhor deixar aqui dentro da pasta do _MLX para evitar problemas com [navegadores paranóicos https://developer.mozilla.org/en/Same-origin_policy_for_file%3a_URIs].

	Nota: Usar uma pasta chamada txt vai facilitar a [integração com o Cloud #cloud].

	Importante: Todos os arquivos TXT devem usar a codificação UTF-8.

Agora que você criou o arquivo, precisa configurar o _ML para utilizá-lo. Edite o [config.js #config] e procure pela configuração ``dataFiles``. Descomente a linha e coloque o path do seu arquivo, assim:

``` dataFiles = ['txt/dados.txt'];

Abra o _MLX em seu navegador. Se aparecer a mensagem "//Nenhum lançamento//", sorria. Está tudo configurado e funcionando corretamente.

[MLROOT/img/beta-txt-ok-400.png]

== Inserir seus lançamentos ==[inserir]

Agora é seu momento de glória, a hora de inserir seus próprios lançamentos no _ML. Já sabe onde, né? No ``dados.txt``, claro.

O formato de cada lançamento é simples, usa apenas três campos: data, valor, descrição. Dúvidas? Consulte o arquivo de exemplo ``sample/data-pt.txt`` e o [Guia de Lançamentos MLROOT/input/].

Sempre que quiser conferir como está ficando, salve o arquivo no editor de textos e recarregue o _MLX no navegador.

Você também pode importar dados de outros programas ou direto de seu Internet Banking. Utilize o [conversor do _ML MLROOT/import/], que entende os seguintes formatos: OFX, OFC, QIF (MS Money, Quicken).


== Parabéns! ==[parabens]

Seu _MLX está funcionando corretamente e agora você já pode dominar seus gastos, não deixando nem um centavinho sequer esquecido.

Aconselho que você use um tempo o _MLX para se acostumar bem com ele, antes de continuar a leitura deste artigo, que aborda tópicos mais avançados.


---------------------------------------------------------


== Faça seu próprio Widget ==[seu-widget]

Se você manja de HTML e JavaScript, saiba que é muito fácil criar um widget novo ali na barra lateral, bastam poucas linhas de código no final de seu [config.js #config].

Há quatro widgets de exemplo:

- [widget-hello-world.js https://github.com/aureliojargas/moneylog-plugins/blob/master/widget-hello-world.js]
- [widget-hello-translation.js https://github.com/aureliojargas/moneylog-plugins/blob/master/widget-hello-translation.js]
- [widget-hello-checkbox.js https://github.com/aureliojargas/moneylog-plugins/blob/master/widget-hello-checkbox.js]
- [widget-nerd-toy.js https://github.com/aureliojargas/moneylog-plugins/blob/master/widget-nerd-toy.js]
-

E o teu widget, vai ser do que? Lembretes? Algum somatório especial? Exportar os dados do extrato para CSV? Use a criatividade! E depois contribua lá no repositório: https://github.com/aureliojargas/moneylog-plugins


== Funcionamento Online ==[online]

O _MLX foi criado para funcionar offline, em sua máquina. Mas você também pode ter fazê-lo funcionar (read-only) pela rede.

Para poder consultar o _MLX **na rede local**, rode o Apache em sua máquina e coloque os arquivos do _ML nele. Acesse normalmente pelo navegador, usando o endereço de sua máquina.

Para poder consultar o _MLX **pela internet**, suba os arquivos para um servidor remoto (tipo o [DreamHost http://www.dreamhost.com/r.cgi?251258]) e coloque-os em uma pasta escondida de algum site que você já possua.

De uma forma ou de outra, aconselho também [colocar uma senha de acesso MLROOT/config/#myPassword] para evitar curiosos.

Mas a melhor solução mesmo, é usar o _MLC para acesso remoto. Veja o próximo tópico.


== Usar o _MLC ao mesmo tempo ==[cloud]

Que tal ter uma solução completa, offline e online, usando dois sabores do _ML ao mesmo tempo?

% Que tal unir o melhor das duas implementações e usar ambas as versões Beta e Cloud ao mesmo tempo?

- Para acesso local, use o _MLX.
- Quando estiver longe de sua máquina, use o _MLC_LINK.
-

Para que este esquema funcione, você deve usar o mesmo [arquivo de configuração #config] e os mesmos [arquivos TXT #txt] para as duas versões. Veja como conseguir isso:

%=== Tática 1: Links simbólicos ===[cloud-symlink]

+ Vá lá no [Cloud _MLC_APPURL] e [conecte-se _MLC_URL#conectar].
+ Entre na pasta _DROPBOX_DIR, que foi criada em seu Dropbox:
```
cd ~/Dropbox_DROPBOX_DIR
```
+ Crie symlinks para os seus arquivos originais do _MLX:
```
rm -rf config.js txt/
ln -s /caminho/para/moneylog-beta/config.js .
ln -s /caminho/para/moneylog-beta/txt/ .
```
+ Espere o Dropbox sincronizar tudo.
+ Acesse novamente o [Cloud _MLC_APPURL], agora os seus dados devem aparecer.
+

%%%
Tática 2 não rola porque o Git não baixa pra pasta se já tiver algum arquivo dentro dela.

=== Tática 2: Usar a mesma pasta ===[cloud-junto]

+ Vá lá no [Cloud _MLC_APPURL] e [conecte-se _MLC_URL#conectar].
+ Entre na pasta _DROPBOX_DIR, que foi criada em seu Dropbox:
```
cd ~/Dropbox_DROPBOX_DIR
```
+ Baixe uma nova cópia da versão Beta dentro dessa pasta.
```
# Atenção ao ponto . no final do camando
git clone https://github.com/aureliojargas/moneylog.git .
```
+ Mova os seus arquivos originais para cá:
```
mv /caminho/para/moneylog-beta-original/config.js .
mv /caminho/para/moneylog-beta-original/txt/* txt
```
+ Espere o Dropbox sincronizar tudo.
+ Abra o arquivo ``_DROPBOX_DIR/moneylog.html`` em seu navegador e confira se todos os seus dados e configurações estão ok.
+ Acesse o _MLC_APPLINK e confira se estão aparecendo os mesmos dados.
+ Tudo certo? Então pode remover a pasta antiga do _MLB:
```
rm -rf /caminho/para/moneylog-beta-original/
```
+
%%%


== Problemas com acentuação? ==[bug-acentos]

O **Firefox** parece ter algum problema em alguns casos, de carregar os acentos incorretamente da primeira vez. Mas basta recarregar a página e tudo fica normal. É um comportamento estranho, que não ocorre com todo mundo. Aqui no meu Firefox do Mac, por exemplo, isso não acontece. De qualquer forma, fica o recado: **Reload** em caso de problemas.

O **Camino** (derivado do Firefox pro Mac), não aceita os acentos nem com Reload. A única solução é mudar a codificação do seu arquivo TXT do padrão UTF-8 para o antigo ISO-8859-1. A troca é fácil:

```
# Converter os dados de UTF-8 para ISO-8859-1
cp dados.txt dados-utf.txt
iconv -f utf-8 -t iso-8859-1 dados-utf.txt > dados.txt
```

Outros navegadores (inclusive IE7 e IE8) não apresentaram problemas com acentos em meus testes.

== Não funciona no Google Chrome ==[bug-chrome]

%!include: ../_chrome.t2t


%!include: ../_footer.t2t

%!include: ''../_disqus.html''
